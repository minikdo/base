#!/bin/bash

set -e

HOSTNAME=$(hostname)

if [ "$HOSTNAME" == "x1" ]; then
    OUTPUT="alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.stereo-fallback"
    # OUTPUT="alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink"
    SOURCE="alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.stereo-fallback.monitor"
    # SOURCE="alsa_input.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp_6__source"
elif [ "$HOSTNAME" == "think13" ]; then
    OUTPUT="alsa_output.pci-0000_00_1b.0.analog-stereo"
    SOURCE="alsa_input.pci-0000_00_1f.3.analog-stereo"
else
    echo "pa_switch: hostname does not match." >&2
    exit 1
fi

A=`pacmd dump | grep "set-sink-volume $OUTPUT" | cut -d " " -f 3`

volume_up() {
    B=$((A + 0x01000))
    if [ $(($B)) -gt $((0x18000)) ]
    then
        B=$((0x18000))
    fi
    pactl set-sink-volume $OUTPUT `printf "0x%X" $B`
}

volume_down() {
    B=$((A - 0x01000))
    if [ $(($B)) -lt $((0x00000)) ]
    then
        B=$((0x00000))
    fi
    pactl set-sink-volume $OUTPUT `printf "0x%X" $B`
}

mic_toggle() {
    pactl set-source-mute $SOURCE toggle
}

sink_mute_toggle() {
    pactl set-sink-mute $OUTPUT toggle
}

while test -n "$1";
do
    case "$1" in
        --help|-h)
            echo "print_help"
            exit
            ;;
        --volume-up)
            volume_up
            exit
            ;;
        --volume-down)
            volume_down
            exit
            ;;
        --mic-toggle)
            mic_toggle
            exit
            ;;
        --sink-mute-toggle)
            sink_mute_toggle
            exit
            ;;
        *)
            echo "Unknown argument: $1"
            exit
            ;;
    esac
    shift
done
